generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  ACTIVE
  PASSIVE
}

/// @child
model Cat {
  id          Int       @id @default(autoincrement())
  parentId    Int?
  name        String    @unique @db.VarChar(30)
  description String?   @unique @default("No Description") @db.VarChar(400)
  parent      Cat?      @relation("children", fields: [parentId], references: [id], onDelete: SetNull)
  children    Cat[]     @relation("children")
  products    Product[]
}

/// @child
model Tag {
  id          Int          @id @default(autoincrement())
  name        String       @unique @db.VarChar(30)
  productTags ProductTag[]
}

/// @parent
model Product {
  id          Int     @id @default(autoincrement())
  name        String  @unique @db.VarChar(30)
  description String? @unique @default("No Description") @db.VarChar(400)
  cost        Decimal @db.Decimal(10, 2)
  price       Decimal @db.Decimal(10, 2)
  quantity    Int
  catId       Int?
  status      Status?

  /// @select @where @include 
  cat Cat? @relation(fields: [catId], references: [id])

  //// @select @where @include
  productTags ProductTag[]

  //// @select @where @include
  attributes ProductAttribute[]
}

/// @child
model ProductAttribute {
  productId Int
  name      String  @db.VarChar(30)
  value     String  @db.VarChar(400)
  product   Product @relation(fields: [productId], references: [id])

  @@unique([productId, name])
}

/// @map
model ProductTag {
  productId Int
  tagId     Int
  product   Product @relation(fields: [productId], references: [id])

  /// @where @select @include
  tag Tag @relation(fields: [tagId], references: [id])

  @@unique([tagId, productId])
}
