import z from 'zod';

export const _int = z.coerce.number().int()


export const _str = z.string()


export const _num = z.coerce.number()


export const _bool = z.coerce.boolean()


export const _date = z.iso.datetime()


export const _shortText = z.string().max(30)


export const _longText = z.string().max(2000)


export const _id = z.coerce.number().int().min(1)


export const _idObject = z.object({ 
   id: _id
})

export const _currency = z.coerce.number().min(0)


export const _positiveInt = z.coerce.number().int().min(0)


export const _name = z.string().min(3).max(30)


export const _slug = z.string().min(3).max(30).regex(/[0-9a-z-]{0,30}/, { error:'Slug must contain only lowercase letters, numbers, and dash.'})


export const _description = z.string().max(1000)


export const _email = z.string().max(1000)


export const _phone = z.string().regex(/^[0-9]{3} [0-9]{3} [0-9]{2}-[0-9]{2}$/, {error: 'Invalid phone format' })


export const _url = z.url()


export const _password = z.string()
  .min(6)
  .regex(/[A-Z]{1,}/, { error: 'must contain at least one upper-case letter' })
  .regex(/[a-z]{1,}/, { error: 'must contain at least one lower-case letter' })
  .regex(/[0-9]{1,}/, { error: 'must contain at least one number' })
  .regex(/[~!@#$%^&*()_+{}":'<>?]{1,}/, {error: 'must contain at least one special character' })


export const _select = z.coerce.boolean().optional()


export const _direction = z.enum(['asc', 'desc']).optional()


export const _orderByCount = z.object({ _count: _direction }).optional();


export const _take = _int.min(1).default(20).optional()


export const _skip = _int.min(0).optional()


export const _json = z.preprocess((value) => {
  if (typeof value === 'string') {
    try {
      return JSON.parse(value);
    } catch {
      return null;
    }
  }
  return value;
}, z.any());


export const _jsonPreprocessor = (value: unknown) => {
  if (typeof value === "string") {
    try {
      return JSON.parse(value);
    } catch {
      return value;
    }
  }
  return value;
}


export const _0_boolFilter = z.object({
  equals: _bool.optional()
})

export const _1_boolFilter =  z.object({ 
  equals: _bool.optional(),
  not: _bool.or(_0_boolFilter).optional()
})

export const _boolFilter = _bool.or(_1_boolFilter)


export const _0_intFilter = z.object({
  equals: _int.optional(),
  gt: _int.optional(),
  gte: _int.optional(),
  lt: _int.optional(),
  lte: _int.optional(),
  in: _int.array().optional(),
  notIn: _int.array().optional(),
})

export const _1_intFilter =  z.object({ 
  equals: _int.optional(),
  gt: _int.optional(),
  gte: _int.optional(),
  lt: _int.optional(),
  lte: _int.optional(),
  in: _int.array().optional(),
  notIn: _int.array().optional(),
  not: _0_intFilter.optional()
})

export const _intFilter = _int.or(_1_intFilter)


export const _0_numFilter = z.object({
  equals: _num.optional(),
  gt: _num.optional(),
  gte: _num.optional(),
  lt: _num.optional(),
  lte: _num.optional(),
  in: _num.array().optional(),
  notIn: _num.array().optional(),
})

export const _1_numFilter =  z.object({ 
  equals: _num.optional(),
  gt: _num.optional(),
  gte: _num.optional(),
  lt: _num.optional(),
  lte: _num.optional(),
  in: _num.array().optional(),
  notIn: _num.array().optional(),
  not: _0_numFilter.optional()
})

export const _numFilter = _num.or(_1_numFilter)


export const _0_dateFilter = z.object({
  equals: _date.optional(),
  gt: _date.optional(),
  gte: _date.optional(),
  lt: _date.optional(),
  lte: _date.optional(),
  in: _date.array().optional(),
  notIn: _date.array().optional(),
})

export const _1_dateFilter =  z.object({ 
  equals: _date.optional(),
  gt: _date.optional(),
  gte: _date.optional(),
  lt: _date.optional(),
  lte: _date.optional(),
  in: _date.array().optional(),
  notIn: _date.array().optional(),
  not: _0_dateFilter.optional()
})

export const _dateFilter = _date.or(_1_dateFilter)


export const _strMode = z.enum(['default', 'insensitive'])

export const _0_strFilter = z.object({
  contains: _str.optional(),
  endsWith: _str.optional(),
  equals: _str.optional(),
  gt: _str.optional(),
  gte: _str.optional(),
  lt: _str.optional(),
  lte: _str.optional(),
  startsWith: _str.optional(),
  in: _str.array().optional(),
  notIn: _str.array().optional(),
  mode: _strMode.optional(),
})

export const _1_strFilter =  z.object({ 
  contains: _str.optional(),
  endsWith: _str.optional(),
  equals: _str.optional(),
  gt: _str.optional(),
  gte: _str.optional(),
  lt: _str.optional(),
  lte: _str.optional(),
  startsWith: _str.optional(),
  in: _str.array().optional(),
  notIn: _str.array().optional(),
  mode: _strMode.optional(),
  not: _str.or(_0_strFilter).optional()
})

export const _strFilter = _str.or(_1_strFilter)


export const _jsonFilter = z.object({ 
  path: _str.array().optional(),
  array_contains: _str.optional(),
  array_ends_with: _str.optional(),
  array_starts_with: _str.optional(),
  equals: _str.optional(),
  gt: _str.optional(),
  gte: _str.optional(),
  lt: _str.optional(),
  lte: _str.optional(),
  mode: _strMode,
  string_contains: _str.optional(),
  string_ends_with: _str.optional(),
  string_starts_with: _str.optional(),
  not: _str.optional()
})


export const _strArrayFilter = z.object({
    equals: _str.array().optional(),
    has: _str.optional(),
    hasEvery: _str.array().optional(),
    hasSome: _str.array().optional(),
    isEmpty: _bool.optional(),
})


export const _numArrayFilter= z.object({
    equals: _num.array().optional(),
    has: _num.optional(),
    hasEvery: _num.array().optional(),
    hasSome: _num.array().optional(),
    isEmpty: _bool.optional(),
})


export const _intArrayFilter= z.object({
    equals: _int.array().optional(),
    has: _int.optional(),
    hasEvery: _int.array().optional(),
    hasSome: _int.array().optional(),
    isEmpty: _bool.optional(),
})


export const _dateArrayFilter= z.object({
    equals: _date.array().optional(),
    has: _date.optional(),
    hasEvery: _date.array().optional(),
    hasSome: _date.array().optional(),
    isEmpty: _bool.optional(),
})


      export const Status = z.enum([ "DONE","IN_PROGRESS","NEW" ]);
      export type StatusType = z.infer< typeof Status>;
      
export const CategoryDistinctSchema = z.enum([ "id","parentId","name","description" ]);
export const TagDistinctSchema = z.enum([ "id","name" ]);
export const SampleDistinctSchema = z.enum([ "id","uuid","otherUuid","createdAt","updatedAt","deletedAt","categoryId","name","slug","description","active","notes","nums","url","json","email","password","price","cost","status","statuses" ]);
export const SampleTagDistinctSchema = z.enum([ "id","tagId","sampleId" ]);
export const CategoryWhereSchema = z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional(),
children: z.object({ 
            some: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }),
          }).optional(),
samples: z.object({ 
            some: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            every: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            none: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }),
          }).optional() }).optional(),
children: z.object({ 
            some: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional(),
children: z.object({ 
            some: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }),
          }).optional(),
samples: z.object({ 
            some: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            every: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            none: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }),
          }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional(),
children: z.object({ 
            some: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }),
          }).optional(),
samples: z.object({ 
            some: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            every: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            none: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }),
          }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional(),
children: z.object({ 
            some: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }),
          }).optional(),
samples: z.object({ 
            some: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            every: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            none: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }),
          }).optional() }),
          }).optional(),
samples: z.object({ 
            some: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional(),
tags: z.object({ 
            some: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            every: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional(),
tags: z.object({ 
            some: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            none: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional(),
tags: z.object({ 
            some: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }),
          }).optional() })
export const CategoryOmitSchema =z.object({ id: _select,
parentId: _select,
name: _select,
description: _select })
export const CategorySelectSchema =z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }).optional(),
        where: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction,
parent: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }),
children: _orderByCount,
samples: _orderByCount }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional(),
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({ category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
category: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }),
tags: _orderByCount,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() })
export const CategoryOrderBySchema = z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction,
parent: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction,
parent: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction,
parent: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }),
children: _orderByCount,
samples: _orderByCount }),
children: _orderByCount,
samples: _orderByCount }),
children: _orderByCount,
samples: _orderByCount })
export const CategoryIncludeSchema = z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }).optional(),
        where: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction,
parent: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }),
children: _orderByCount,
samples: _orderByCount }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional(),
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({ category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
category: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }),
tags: _orderByCount,
status: _direction,
statuses: _direction }) .optional(),
    }) })
export const CategoryQueryOneSchema = z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional(),
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({ category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional(),
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({ category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }).optional(),
        where: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional(),
children: z.object({ 
            some: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }),
          }).optional(),
samples: z.object({ 
            some: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            every: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            none: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }),
          }).optional() }).optional()
    })
export const CategoryQuerySchema = z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional(),
children: z.object({ 
            some: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }),
          }).optional(),
samples: z.object({ 
            some: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            every: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            none: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }),
          }).optional() }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional(),
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({ category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional(),
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({ category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction,
parent: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction,
parent: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }),
children: _orderByCount,
samples: _orderByCount }),
children: _orderByCount,
samples: _orderByCount }) .optional(),
    })
export const TagWhereSchema = z.object({ id: _intFilter.optional(),
name: _strFilter.optional(),
samples: z.object({ 
            some: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }).optional(),
tag: z.object({ id: _intFilter.optional(),
name: _strFilter.optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }).optional(),
tag: z.object({ id: _intFilter.optional(),
name: _strFilter.optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }).optional(),
tag: z.object({ id: _intFilter.optional(),
name: _strFilter.optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional() }),
          }).optional() })
export const TagOmitSchema =z.object({ id: _select,
name: _select })
export const TagSelectSchema =z.object({ id: _select,
name: _select,
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select,
sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({ sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction,
sample: z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }),
tag: z.object({ id: _direction,
name: _direction }) }) .optional(),
    }).optional() })
export const TagOrderBySchema = z.object({ id: _direction,
name: _direction,
samples: _orderByCount })
export const TagIncludeSchema = z.object({ samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select,
sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({ sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction,
sample: z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }),
tag: z.object({ id: _direction,
name: _direction }) }) .optional(),
    }) })
export const TagQueryOneSchema = z.object({ 
        select: z.object({ id: _select,
name: _select,
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select,
sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({ sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({ samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select,
sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({ sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }).optional(),
        where: z.object({ id: _intFilter.optional(),
name: _strFilter.optional(),
samples: z.object({ 
            some: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }),
          }).optional() }).optional()
    })
export const TagQuerySchema = z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({ id: _intFilter.optional(),
name: _strFilter.optional(),
samples: z.object({ 
            some: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }),
          }).optional() }),
        distinct:TagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
name: _select,
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select,
sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({ sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
name: _select }).optional(),
        include: z.object({ samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select,
sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({ sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
name: _direction,
samples: _orderByCount }) .optional(),
    })
export const SampleWhereSchema = z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional(),
children: z.object({ 
            some: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }),
          }).optional(),
samples: z.object({ 
            some: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            every: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }), 
            none: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }),
          }).optional() }).optional(),
tags: z.object({ 
            some: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }).optional(),
tag: z.object({ id: _intFilter.optional(),
name: _strFilter.optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }).optional(),
tag: z.object({ id: _intFilter.optional(),
name: _strFilter.optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }).optional(),
tag: z.object({ id: _intFilter.optional(),
name: _strFilter.optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional() }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() })
export const SampleOmitSchema =z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select })
export const SampleSelectSchema =z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }).optional(),
        where: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional()
    }).optional(),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select,
sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({ sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction,
sample: z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }),
tag: z.object({ id: _direction,
name: _direction }) }) .optional(),
    }).optional(),
status: _select,
statuses: _select })
export const SampleOrderBySchema = z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
category: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction,
parent: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction,
parent: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }),
children: _orderByCount,
samples: _orderByCount }),
children: _orderByCount,
samples: _orderByCount }),
tags: _orderByCount,
status: _direction,
statuses: _direction })
export const SampleIncludeSchema = z.object({ category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }).optional(),
        where: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional()
    }),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select,
sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({ sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction,
sample: z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }),
tag: z.object({ id: _direction,
name: _direction }) }) .optional(),
    }) })
export const SampleQueryOneSchema = z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select,
sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({ sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional(),
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({ category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select,
sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({ sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }).optional(),
        where: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional(),
tags: z.object({ 
            some: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }).optional()
    })
export const SampleQuerySchema = z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional(),
tags: z.object({ 
            some: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select,
sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({ sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional(),
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({ category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select,
parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }).optional(),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({ parent: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
children: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:CategoryDistinctSchema.array().optional(),
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }) .optional(),
        omit: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }) .optional(),
    }),
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleDistinctSchema.array().optional(),
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }) .optional(),
        omit: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
status: _direction,
statuses: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select,
sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({ sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
category: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction,
parent: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }),
children: _orderByCount,
samples: _orderByCount }),
tags: _orderByCount,
status: _direction,
statuses: _direction }) .optional(),
    })
export const SampleTagWhereSchema = z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({ id: _intFilter.optional(),
parentId: _intFilter.optional(),
name: _strFilter.optional(),
description: _strFilter.optional(),
parent: z.object({  }).optional(),
children: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional(),
tags: z.object({ 
            some: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }).optional(),
tag: z.object({ id: _intFilter.optional(),
name: _strFilter.optional(),
samples: z.object({ 
            some: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            every: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }), 
            none: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({  }).optional(),
tag: z.object({  }).optional() }),
          }).optional() }).optional() })
export const SampleTagOmitSchema =z.object({ id: _select,
tagId: _select,
sampleId: _select })
export const SampleTagSelectSchema =z.object({ id: _select,
tagId: _select,
sampleId: _select,
sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional(),
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({ category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }).optional(),
        where: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }).optional()
    }).optional(),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select,
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({ samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }).optional(),
        where: z.object({ id: _intFilter.optional(),
name: _strFilter.optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional()
    }).optional() })
export const SampleTagOrderBySchema = z.object({ id: _direction,
tagId: _direction,
sampleId: _direction,
sample: z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
category: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction,
parent: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }),
children: _orderByCount,
samples: _orderByCount }),
tags: _orderByCount,
status: _direction,
statuses: _direction }),
tag: z.object({ id: _direction,
name: _direction,
samples: _orderByCount }) })
export const SampleTagIncludeSchema = z.object({ sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional(),
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({ category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }).optional(),
        where: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }).optional()
    }),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select,
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({ samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }).optional(),
        where: z.object({ id: _intFilter.optional(),
name: _strFilter.optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional()
    }) })
export const SampleTagQueryOneSchema = z.object({ 
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select,
sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional(),
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({ category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select,
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({ samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }).optional() }).optional(),
        omit:z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({ sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional(),
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({ category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select,
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({ samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }) }).optional(),
        where: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }).optional(),
tag: z.object({ id: _intFilter.optional(),
name: _strFilter.optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional() }).optional()
    })
export const SampleTagQuerySchema = z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({ id: _intFilter.optional(),
tagId: _intFilter.optional(),
sampleId: _intFilter.optional(),
sample: z.object({ id: _intFilter.optional(),
uuid: _strFilter.optional(),
otherUuid: _strFilter.optional(),
createdAt: _dateFilter.optional(),
updatedAt: _dateFilter.optional(),
deletedAt: _dateFilter.optional(),
categoryId: _intFilter.optional(),
name: _strFilter.optional(),
slug: _strFilter.optional(),
description: _strFilter.optional(),
active: _boolFilter.optional(),
notes: _strArrayFilter.optional(),
nums: _intArrayFilter.optional(),
url: _strFilter.optional(),
json: _strFilter.optional(),
email: _strFilter.optional(),
password: _strFilter.optional(),
price: _numFilter.optional(),
cost: _numFilter.optional(),
category: z.object({  }).optional(),
tags: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional(),
status: Status.optional(),
statuses: Status.array().optional() }).optional(),
tag: z.object({ id: _intFilter.optional(),
name: _strFilter.optional(),
samples: z.object({ 
            some: z.object({  }), 
            every: z.object({  }), 
            none: z.object({  }),
          }).optional() }).optional() }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select,
sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional(),
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({ category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select,
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({ samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }).optional() }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({ sample: z.object({ 
        select: z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }).optional(),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional(),
status: _select,
statuses: _select }).optional(),
        omit:z.object({ id: _select,
uuid: _select,
otherUuid: _select,
createdAt: _select,
updatedAt: _select,
deletedAt: _select,
categoryId: _select,
name: _select,
slug: _select,
description: _select,
active: _select,
notes: _select,
nums: _select,
url: _select,
json: _select,
email: _select,
password: _select,
price: _select,
cost: _select,
status: _select,
statuses: _select }).optional(),
        include: z.object({ category: z.object({ 
        select: z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        omit:z.object({ id: _select,
parentId: _select,
name: _select,
description: _select }).optional(),
        include: z.object({  }).optional(),
        where: z.object({  }).optional()
    }),
tags: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }),
tag: z.object({ 
        select: z.object({ id: _select,
name: _select,
samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }).optional() }).optional(),
        omit:z.object({ id: _select,
name: _select }).optional(),
        include: z.object({ samples: z.object({ 
        take:_take, 
        skip:_skip, 
        where: z.object({  }),
        distinct:SampleTagDistinctSchema.array().optional(),
        select: z.object({ id: _select,
tagId: _select,
sampleId: _select }) .optional(),
        omit: z.object({ id: _select,
tagId: _select,
sampleId: _select }).optional(),
        include: z.object({  }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction }) .optional(),
    }) }).optional(),
        where: z.object({  }).optional()
    }) }) .optional(), 
        orderBy:z.object({ id: _direction,
tagId: _direction,
sampleId: _direction,
sample: z.object({ id: _direction,
uuid: _direction,
otherUuid: _direction,
createdAt: _direction,
updatedAt: _direction,
deletedAt: _direction,
categoryId: _direction,
name: _direction,
slug: _direction,
description: _direction,
active: _direction,
notes: _direction,
nums: _direction,
url: _direction,
json: _direction,
email: _direction,
password: _direction,
price: _direction,
cost: _direction,
category: z.object({ id: _direction,
parentId: _direction,
name: _direction,
description: _direction }),
tags: _orderByCount,
status: _direction,
statuses: _direction }),
tag: z.object({ id: _direction,
name: _direction,
samples: _orderByCount }) }) .optional(),
    })
export const CategoryProjectionSchema = z.object({ 
        select: CategorySelectSchema.optional(),
        omit: CategoryOmitSchema.optional(),
        include:  CategoryIncludeSchema.optional()
    })
export const TagProjectionSchema = z.object({ 
        select: TagSelectSchema.optional(),
        omit: TagOmitSchema.optional(),
        include:  TagIncludeSchema.optional()
    })
export const SampleProjectionSchema = z.object({ 
        select: SampleSelectSchema.optional(),
        omit: SampleOmitSchema.optional(),
        include:  SampleIncludeSchema.optional()
    })
export const SampleTagProjectionSchema = z.object({ 
        select: SampleTagSelectSchema.optional(),
        omit: SampleTagOmitSchema.optional(),
        include:  SampleTagIncludeSchema.optional()
    })

    export type CategorySelect = z.infer<typeof CategorySelectSchema>;
    export type CategoryOmit = z.infer<typeof CategoryOmitSchema>;
    export type CategoryInclude = z.infer<typeof CategoryIncludeSchema>; 
    export type CategoryOrderBy = z.infer<typeof CategoryOrderBySchema>; 
    export type CategoryWhere = z.infer<typeof CategoryWhereSchema>; 
    export type CategoryQueryOne = z.infer<typeof CategoryQueryOneSchema>; 
    export type CategoryQuery = z.infer<typeof CategoryQuerySchema>; 
    export type CategoryDistinct = z.infer<typeof CategoryDistinctSchema>;
    export type CategoryProjection = z.infer<typeof CategoryProjectionSchema>;
    

    export type TagSelect = z.infer<typeof TagSelectSchema>;
    export type TagOmit = z.infer<typeof TagOmitSchema>;
    export type TagInclude = z.infer<typeof TagIncludeSchema>; 
    export type TagOrderBy = z.infer<typeof TagOrderBySchema>; 
    export type TagWhere = z.infer<typeof TagWhereSchema>; 
    export type TagQueryOne = z.infer<typeof TagQueryOneSchema>; 
    export type TagQuery = z.infer<typeof TagQuerySchema>; 
    export type TagDistinct = z.infer<typeof TagDistinctSchema>;
    export type TagProjection = z.infer<typeof TagProjectionSchema>;
    

    export type SampleSelect = z.infer<typeof SampleSelectSchema>;
    export type SampleOmit = z.infer<typeof SampleOmitSchema>;
    export type SampleInclude = z.infer<typeof SampleIncludeSchema>; 
    export type SampleOrderBy = z.infer<typeof SampleOrderBySchema>; 
    export type SampleWhere = z.infer<typeof SampleWhereSchema>; 
    export type SampleQueryOne = z.infer<typeof SampleQueryOneSchema>; 
    export type SampleQuery = z.infer<typeof SampleQuerySchema>; 
    export type SampleDistinct = z.infer<typeof SampleDistinctSchema>;
    export type SampleProjection = z.infer<typeof SampleProjectionSchema>;
    

    export type SampleTagSelect = z.infer<typeof SampleTagSelectSchema>;
    export type SampleTagOmit = z.infer<typeof SampleTagOmitSchema>;
    export type SampleTagInclude = z.infer<typeof SampleTagIncludeSchema>; 
    export type SampleTagOrderBy = z.infer<typeof SampleTagOrderBySchema>; 
    export type SampleTagWhere = z.infer<typeof SampleTagWhereSchema>; 
    export type SampleTagQueryOne = z.infer<typeof SampleTagQueryOneSchema>; 
    export type SampleTagQuery = z.infer<typeof SampleTagQuerySchema>; 
    export type SampleTagDistinct = z.infer<typeof SampleTagDistinctSchema>;
    export type SampleTagProjection = z.infer<typeof SampleTagProjectionSchema>;
    