generator client {
  provider = "prisma-client-js"
  output   = "../generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id       Int    @id @default(autoincrement())
  parentId Int?
  name     String @unique
  slug     String @unique

  parent   Category?         @relation("SubCategories", fields: [parentId], references: [id])
  children Category[]        @relation("SubCategories")
  products ProductCategory[]
}

model Product {
  id          Int     @id @default(autoincrement())
  warrantyId  Int?
  uuid        String  @unique @default(uuid())
  name        String  @unique
  slug        String  @unique
  description String?

  variants   Variant[]
  categories ProductCategory[]
  images     Image[]
  suppliers  Supplier[]
  discounts  DiscountTarget[]
  warranty   WarrantyPolicy?   @relation(fields: [warrantyId], references: [id])
}

model Image {
  id          Int     @id @default(autoincrement())
  productId   Int
  url         String
  order       Int     @default(0)
  description String?

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Supplier {
  id        Int    @id @default(autoincrement())
  orgId     String @unique
  productId Int

  supplierSku  String
  supplierCost Decimal?
  leadTimeDays Int?

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model PaymentTerm {
  id              Int     @id @default(autoincrement())
  code            String  @unique // e.g., "NET30", "2/10NET30"
  description     String // e.g., "Net amount due 30 days after invoice date"
  daysDue         Int // e.g., 30
  discountDays    Int // e.g., 10 (for "2/10")
  discountPercent Decimal // e.g., 0.02 (for "2/10")
}

model ProductCategory {
  id         Int @id @default(autoincrement())
  productId  Int
  categoryId Int

  product  Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Variant {
  id         Int    @id @default(autoincrement())
  uuid       String @unique @default(uuid())
  productId  Int
  warrantyId Int?
  sku        String @unique
  upc        String @unique

  product        Product          @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  attributes     AttributeValue[]
  prices         Price[]
  quantities     Quantity[]
  discounts      DiscountTarget[]
  serrialNumbers SerialNumber[]
  warranty       WarrantyPolicy?  @relation(fields: [warrantyId], references: [id])
}

model Attribute {
  id   Int    @id @default(autoincrement())
  name String
  unit String

  values AttributeValue[]
}

model AttributeValue {
  id Int @id @default(autoincrement())

  variant   Variant @relation(fields: [variantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  variantId Int

  attribute   Attribute @relation(fields: [attributeId], references: [id])
  attributeId Int

  value String
}

model Currency {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  priceLevels PriceLevel[]
}

model PriceLevel {
  id         Int     @id @default(autoincrement())
  currencyId Int
  name       String  @unique
  taxrate    Decimal

  currency  Currency         @relation(fields: [currencyId], references: [id])
  stores    Store[]
  prices    Price[]
  discounts DiscountTarget[]
}

model Price {
  id           Int @id @default(autoincrement())
  variantId    Int
  priceLevelId Int

  price       Decimal
  cost        Decimal
  description String?

  variant    Variant    @relation(fields: [variantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  priceLevel PriceLevel @relation(fields: [priceLevelId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Quantity {
  id        Int @id @default(autoincrement())
  variantId Int
  storeId   Int

  quantity       Int
  alertThreshold Int?

  variant Variant @relation(fields: [variantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  store   Store   @relation(fields: [storeId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([variantId, storeId])
}

model SerialNumber {
  id        Int @id @default(autoincrement())
  variantId Int
  storeId   Int

  serialNumber String  @unique
  inStock      Boolean

  variant Variant @relation(fields: [variantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  store   Store   @relation(fields: [storeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

enum DiscountType {
  PERCENT
  FIXED_AMOUNT
  BOGO
}

model Discount {
  id          Int              @id @default(autoincrement())
  code        String           @unique //	The unique promotional code (e.g., "FALL20", "BUY2GET1").
  type        DiscountType ///String	Crucial: Defines how the discount is applied (PERCENT, FIXED_AMOUNT, BOGO - Buy One Get One).
  value       Decimal //	The amount or percentage to discount (e.g., 0.20 for 20% or 10.00 for a $10 off).
  minQuantity Int? //?	Minimum items required to trigger (e.g., must buy 2 shirts).
  startDate   DateTime //	When the promotion becomes active.
  endDate     DateTime //	When the promotion expires.
  maxUses     Int? //?	Maximum number of times the code can be used globally.
  targets     DiscountTarget[]
}

model DiscountTarget {
  id           Int  @id @default(autoincrement())
  discountId   Int
  productId    Int?
  variantId    Int?
  storeId      Int?
  priceLevelId Int?

  discount   Discount    @relation(fields: [discountId], references: [id])
  product    Product?    @relation(fields: [productId], references: [id])
  variant    Variant?    @relation(fields: [variantId], references: [id])
  store      Store?      @relation(fields: [storeId], references: [id])
  priceLevel PriceLevel? @relation(fields: [priceLevelId], references: [id])
}

model Store {
  id           Int @id @default(autoincrement())
  priceLevelId Int

  name        String  @unique
  slug        String  @unique
  description String?

  priceLevel    PriceLevel       @relation(fields: [priceLevelId], references: [id])
  quantities    Quantity[]
  discounts     DiscountTarget[]
  serialNumbers SerialNumber[]
}

model WarrantyPolicy {
  id           Int     @id @default(autoincrement())
  name         String  @unique // e.g., "Standard 1-Year Limited"
  description  String? // Full legal details or notes
  durationDays Int // The length of the warranty

  products Product[]
  variants Variant[]
}
