generator client {
  provider = "prisma-client-js"
  output   = "../generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  id   Int    @id @default(autoincrement())
  name String @unique
  slug String @unique

  categories Category[]
}

model Category {
  id           Int    @id @default(autoincrement())
  name         String @unique
  slug         String @unique
  departmentId Int?

  department Department?       @relation(fields: [departmentId], references: [id], onDelete: SetNull, onUpdate: NoAction)
  categories ProductCategory[]
}

model Product {
  id   Int    @id @default(autoincrement())
  uuid String @unique @default(uuid())

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  name        String  @unique
  description String?
  slug        String  @unique

  variants   Variant[]
  images     ProductImage[]
  categories ProductCategory[]
}

model ProductCategory {
  id         Int @id @default(autoincrement())
  productId  Int
  categoryId Int

  product  Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Variant {
  id   Int    @id @default(autoincrement())
  uuid String @unique @default(uuid())

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId Int

  sku     String @unique
  upc     String @unique
  barcode String @unique

  attributes AttributeValue[]
  images     VariantImage[]
}

model Attribute {
  id   Int    @id @default(autoincrement())
  name String
  unit String

  values AttributeValue[]
}

model AttributeValue {
  id Int @id @default(autoincrement())

  variant   Variant @relation(fields: [variantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  variantId Int

  attribute   Attribute @relation(fields: [attributeId], references: [id])
  attributeId Int

  value String
}

model VariantImage {
  id Int @id @default(autoincrement())

  description String?
  url         String
  order       Int     @default(0)

  variant   Variant @relation(fields: [variantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  variantId Int
}

model ProductImage {
  id Int @id @default(autoincrement())

  description String?
  url         String
  order       Int     @default(0)

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId Int
}
